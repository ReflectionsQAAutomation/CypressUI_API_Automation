{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-22T10:16:15.128Z",
    "end": "2024-04-22T10:16:24.632Z",
    "duration": 9504,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c4f6aeff-7087-496e-81ae-ce0578cf1030",
      "title": "",
      "fullFile": "cypress\\Component\\api_tests\\cart\\delete-items.js",
      "file": "cypress\\Component\\api_tests\\cart\\delete-items.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "105991e6-0468-407f-ae62-5e026d54bae5",
          "title": "cart tests -delete",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new cart",
              "fullTitle": "cart tests -delete create a new cart",
              "timedOut": null,
              "duration": 652,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://api.practicesoftwaretesting.com/carts\",\n  headers: {\n    \"accept\": \"application/json\"\n  }\n}).as(\"cartIdResponse\");\ncy.get(\"@cartIdResponse\").should(response => {\n  expect(response.status).to.eq(201);\n  const {\n    body\n  } = response;\n  cart_id = body.id;\n});",
              "err": {},
              "uuid": "5e135f0c-316a-4360-97b9-19cb92880e98",
              "parentUUID": "105991e6-0468-407f-ae62-5e026d54bae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Retrieves a product",
              "fullTitle": "cart tests -delete Retrieves a product",
              "timedOut": null,
              "duration": 5628,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.practicesoftwaretesting.com/products?between=10\",\n  headers: {\n    \"accept\": \"application/json\"\n  }\n}).as(\"productListResponse\");\ncy.get(\"@productListResponse\").then(response => {\n  expect(response.status).to.eq(200);\n  const {\n    body\n  } = response;\n  for (var iteration = 0; iteration <= 3; iteration++) {\n    productList.push(body.data[iteration].id);\n  }\n  return productList;\n}).then(productList => {\n  for (var index = 0; index <= 3; index++) {\n    cy.request({\n      method: \"POST\",\n      url: \"https://api.practicesoftwaretesting.com/carts/\" + cart_id,\n      headers: {\n        \"accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        \"product_id\": productList[index],\n        \"quantity\": 1\n      }\n    }).as(\"addItemResponse\");\n    cy.get(\"@addItemResponse\").should(response => {\n      expect(response.status).to.eq(200);\n    });\n  }\n});",
              "err": {},
              "uuid": "74002a24-4830-4c4c-a1d1-688757f64ea2",
              "parentUUID": "105991e6-0468-407f-ae62-5e026d54bae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get cart id after adding multiple products",
              "fullTitle": "cart tests -delete get cart id after adding multiple products",
              "timedOut": null,
              "duration": 686,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.practicesoftwaretesting.com/carts/\" + cart_id,\n  headers: {\n    \"accept\": \"application/json\"\n  }\n}).as(\"getCartDetails\");\ncy.get(\"@getCartDetails\").then(response => {\n  expect(response.status).to.eq(200);\n  const {\n    body\n  } = response;\n  expect(body.cart_items[0].cart_id).to.eq(cart_id);\n  for (var iteration = 0; iteration <= 3; iteration++) {\n    productsAdded.push(body.cart_items[iteration].product_id);\n  }\n  return productsAdded;\n}).then(productsAdded => {\n  productId = productsAdded[0];\n  expect(productsAdded).to.have.length(4);\n});",
              "err": {},
              "uuid": "a41ed414-aab2-47e2-87c2-b42e5c5058d1",
              "parentUUID": "105991e6-0468-407f-ae62-5e026d54bae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete an item in cart",
              "fullTitle": "cart tests -delete Delete an item in cart",
              "timedOut": null,
              "duration": 690,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: \"https://api.practicesoftwaretesting.com/carts/\" + cart_id + \"/product/\" + productId\n}).as(\"deleteItem\");\ncy.get(\"@deleteItem\").should(response => {\n  expect(response.status).to.eq(204);\n});",
              "err": {},
              "uuid": "44c4defa-1dfc-4c5e-bc56-74430b20ca62",
              "parentUUID": "105991e6-0468-407f-ae62-5e026d54bae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get cart id after delete",
              "fullTitle": "cart tests -delete get cart id after delete",
              "timedOut": null,
              "duration": 713,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.practicesoftwaretesting.com/carts/\" + cart_id,\n  headers: {\n    \"accept\": \"application/json\"\n  }\n}).as(\"getCartDetails\");\ncy.get(\"@getCartDetails\").then(response => {\n  expect(response.status).to.eq(200);\n  const {\n    body\n  } = response;\n  expect(body.cart_items[0].cart_id).to.eq(cart_id);\n  for (var item = 0; item <= 2; item++) {\n    //cy.wrap(body).each(()=>{\n    productListAfterDelete.push(body.cart_items[item].product_id);\n    // })\n  }\n  return productListAfterDelete;\n}).then(productListAfterDelete => {\n  expect(productListAfterDelete).to.have.length(3);\n  cy.wrap(productListAfterDelete).each(($value, _index, _$productListAfterDelete) => {\n    const product = $value;\n    expect(productId, 'PRODUCT').to.not.equal(product);\n  });\n});",
              "err": {},
              "uuid": "61bdca7b-ad3e-4bdb-96dd-054b497b63d7",
              "parentUUID": "105991e6-0468-407f-ae62-5e026d54bae5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e135f0c-316a-4360-97b9-19cb92880e98",
            "74002a24-4830-4c4c-a1d1-688757f64ea2",
            "a41ed414-aab2-47e2-87c2-b42e5c5058d1",
            "44c4defa-1dfc-4c5e-bc56-74430b20ca62",
            "61bdca7b-ad3e-4bdb-96dd-054b497b63d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8369,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome-report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/json",
        "overwrite": false,
        "charts": true,
        "html": false,
        "json": true,
        "reportFilename": "mochawesome-report",
        "quiet": true
      },
      "version": "6.2.0"
    }
  }
}