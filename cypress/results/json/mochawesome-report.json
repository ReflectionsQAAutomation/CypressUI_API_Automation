{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-04-22T10:15:50.017Z",
    "end": "2024-04-22T10:15:59.050Z",
    "duration": 9033,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f56722cf-a74f-4763-b5dc-9cb16ec47625",
      "title": "",
      "fullFile": "cypress\\Component\\api_tests\\cart\\add-items-to-cart.js",
      "file": "cypress\\Component\\api_tests\\cart\\add-items-to-cart.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2cd13501-056e-4b5d-a04b-7ca68d78f214",
          "title": "cart tests -add",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create a new cart",
              "fullTitle": "cart tests -add create a new cart",
              "timedOut": null,
              "duration": 1473,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"https://api.practicesoftwaretesting.com/carts\",\n  headers: {\n    \"accept\": \"application/json\"\n  }\n}).as(\"cartIdResponse\");\ncy.get(\"@cartIdResponse\").should(response => {\n  expect(response.status).to.eq(201);\n  const {\n    body\n  } = response;\n  cart_id = body.id;\n});",
              "err": {},
              "uuid": "566c7133-b38c-4fc4-ab6c-4649336ab1f9",
              "parentUUID": "2cd13501-056e-4b5d-a04b-7ca68d78f214",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Retrieves a product",
              "fullTitle": "cart tests -add Retrieves a product",
              "timedOut": null,
              "duration": 5077,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.practicesoftwaretesting.com/products?between=10\",\n  headers: {\n    \"accept\": \"application/json\"\n  }\n}).as(\"productListResponse\");\ncy.get(\"@productListResponse\").then(response => {\n  expect(response.status).to.eq(200);\n  const {\n    body\n  } = response;\n  product_id = body.data[0].id;\n});",
              "err": {},
              "uuid": "3dfdea8a-ef86-4f02-a06a-f56b1199509e",
              "parentUUID": "2cd13501-056e-4b5d-a04b-7ca68d78f214",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add item to a cart",
              "fullTitle": "cart tests -add Add item to a cart",
              "timedOut": null,
              "duration": 657,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const postData = this.data.post_Data;\npostData.product_id = product_id;\ncy.request({\n  method: \"POST\",\n  url: \"https://api.practicesoftwaretesting.com/carts/\" + cart_id,\n  headers: {\n    \"accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n  },\n  body: postData\n}).as(\"addItemResponse\");\ncy.get(\"@addItemResponse\").should(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "cf43e090-d564-4745-a926-99d1d1d38336",
              "parentUUID": "2cd13501-056e-4b5d-a04b-7ca68d78f214",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get cart id",
              "fullTitle": "cart tests -add get cart id",
              "timedOut": null,
              "duration": 688,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.practicesoftwaretesting.com/carts/\" + cart_id,\n  headers: {\n    \"accept\": \"application/json\"\n  }\n}).as(\"getCartDetails\");\ncy.get(\"@getCartDetails\").then(response => {\n  expect(response.status).to.eq(200);\n  const {\n    body\n  } = response;\n  expect(body.cart_items[0].cart_id).to.eq(cart_id);\n  expect(body.cart_items[0].product_id).to.eq(product_id);\n});",
              "err": {},
              "uuid": "ecde60ab-afc5-4f83-be79-4c402458b657",
              "parentUUID": "2cd13501-056e-4b5d-a04b-7ca68d78f214",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "566c7133-b38c-4fc4-ab6c-4649336ab1f9",
            "3dfdea8a-ef86-4f02-a06a-f56b1199509e",
            "cf43e090-d564-4745-a926-99d1d1d38336",
            "ecde60ab-afc5-4f83-be79-4c402458b657"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7895,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome-report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/json",
        "overwrite": false,
        "charts": true,
        "html": false,
        "json": true,
        "reportFilename": "mochawesome-report",
        "quiet": true
      },
      "version": "6.2.0"
    }
  }
}